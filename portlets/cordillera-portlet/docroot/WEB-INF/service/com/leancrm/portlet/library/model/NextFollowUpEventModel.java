/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.leancrm.portlet.library.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the NextFollowUpEvent service. Represents a row in the &quot;crm_NextFollowUpEvent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.leancrm.portlet.library.model.impl.NextFollowUpEventModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.leancrm.portlet.library.model.impl.NextFollowUpEventImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NextFollowUpEvent
 * @see com.leancrm.portlet.library.model.impl.NextFollowUpEventImpl
 * @see com.leancrm.portlet.library.model.impl.NextFollowUpEventModelImpl
 * @generated
 */
public interface NextFollowUpEventModel extends BaseModel<NextFollowUpEvent> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a next follow up event model instance should use the {@link NextFollowUpEvent} interface instead.
	 */

	/**
	 * Returns the primary key of this next follow up event.
	 *
	 * @return the primary key of this next follow up event
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this next follow up event.
	 *
	 * @param primaryKey the primary key of this next follow up event
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the event ID of this next follow up event.
	 *
	 * @return the event ID of this next follow up event
	 */
	public long getEventId();

	/**
	 * Sets the event ID of this next follow up event.
	 *
	 * @param eventId the event ID of this next follow up event
	 */
	public void setEventId(long eventId);

	/**
	 * Returns the event date of this next follow up event.
	 *
	 * @return the event date of this next follow up event
	 */
	public Date getEventDate();

	/**
	 * Sets the event date of this next follow up event.
	 *
	 * @param eventDate the event date of this next follow up event
	 */
	public void setEventDate(Date eventDate);

	/**
	 * Returns the status of this next follow up event.
	 *
	 * @return the status of this next follow up event
	 */
	public int getStatus();

	/**
	 * Sets the status of this next follow up event.
	 *
	 * @param status the status of this next follow up event
	 */
	public void setStatus(int status);

	/**
	 * Returns the title of this next follow up event.
	 *
	 * @return the title of this next follow up event
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this next follow up event.
	 *
	 * @param title the title of this next follow up event
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this next follow up event.
	 *
	 * @return the description of this next follow up event
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this next follow up event.
	 *
	 * @param description the description of this next follow up event
	 */
	public void setDescription(String description);

	/**
	 * Returns the create date of this next follow up event.
	 *
	 * @return the create date of this next follow up event
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this next follow up event.
	 *
	 * @param createDate the create date of this next follow up event
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the owner ID of this next follow up event.
	 *
	 * @return the owner ID of this next follow up event
	 */
	public long getOwnerId();

	/**
	 * Sets the owner ID of this next follow up event.
	 *
	 * @param ownerId the owner ID of this next follow up event
	 */
	public void setOwnerId(long ownerId);

	/**
	 * Returns the contract ID of this next follow up event.
	 *
	 * @return the contract ID of this next follow up event
	 */
	public long getContractId();

	/**
	 * Sets the contract ID of this next follow up event.
	 *
	 * @param contractId the contract ID of this next follow up event
	 */
	public void setContractId(long contractId);

	/**
	 * Returns the report ID of this next follow up event.
	 *
	 * @return the report ID of this next follow up event
	 */
	public long getReportId();

	/**
	 * Sets the report ID of this next follow up event.
	 *
	 * @param reportId the report ID of this next follow up event
	 */
	public void setReportId(long reportId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(NextFollowUpEvent nextFollowUpEvent);

	@Override
	public int hashCode();

	@Override
	public CacheModel<NextFollowUpEvent> toCacheModel();

	@Override
	public NextFollowUpEvent toEscapedModel();

	@Override
	public NextFollowUpEvent toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}