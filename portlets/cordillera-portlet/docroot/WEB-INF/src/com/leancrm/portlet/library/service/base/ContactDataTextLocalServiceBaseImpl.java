/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.leancrm.portlet.library.service.base;

import com.leancrm.portlet.library.model.ContactDataText;
import com.leancrm.portlet.library.service.ContactDataTextLocalService;
import com.leancrm.portlet.library.service.persistence.AddressBookContactDataPersistence;
import com.leancrm.portlet.library.service.persistence.AddressBookContactPersistence;
import com.leancrm.portlet.library.service.persistence.AddressBookOrganizationPersistence;
import com.leancrm.portlet.library.service.persistence.AddressBookPersistence;
import com.leancrm.portlet.library.service.persistence.AddressBookUserPersistence;
import com.leancrm.portlet.library.service.persistence.ColleagueAddressBookContactFinder;
import com.leancrm.portlet.library.service.persistence.ColleagueAddressBookContactPersistence;
import com.leancrm.portlet.library.service.persistence.ContactContractPersistence;
import com.leancrm.portlet.library.service.persistence.ContactDataMethodPersistence;
import com.leancrm.portlet.library.service.persistence.ContactDataPersistence;
import com.leancrm.portlet.library.service.persistence.ContactDataPhonePersistence;
import com.leancrm.portlet.library.service.persistence.ContactDataRefPersistence;
import com.leancrm.portlet.library.service.persistence.ContactDataTextPersistence;
import com.leancrm.portlet.library.service.persistence.ContactPersistence;
import com.leancrm.portlet.library.service.persistence.ContractPersistence;
import com.leancrm.portlet.library.service.persistence.EnterprisePersistence;
import com.leancrm.portlet.library.service.persistence.IndustryPersistence;
import com.leancrm.portlet.library.service.persistence.MyAddressBookContactFinder;
import com.leancrm.portlet.library.service.persistence.MyAddressBookContactPersistence;
import com.leancrm.portlet.library.service.persistence.NextFollowUpEventPersistence;
import com.leancrm.portlet.library.service.persistence.OrganizationIndustryPersistence;
import com.leancrm.portlet.library.service.persistence.ReportPersistence;
import com.leancrm.portlet.library.service.persistence.UserContractPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the contact data text local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.leancrm.portlet.library.service.impl.ContactDataTextLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.leancrm.portlet.library.service.impl.ContactDataTextLocalServiceImpl
 * @see com.leancrm.portlet.library.service.ContactDataTextLocalServiceUtil
 * @generated
 */
public abstract class ContactDataTextLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements ContactDataTextLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.leancrm.portlet.library.service.ContactDataTextLocalServiceUtil} to access the contact data text local service.
	 */

	/**
	 * Adds the contact data text to the database. Also notifies the appropriate model listeners.
	 *
	 * @param contactDataText the contact data text
	 * @return the contact data text that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ContactDataText addContactDataText(ContactDataText contactDataText)
		throws SystemException {
		contactDataText.setNew(true);

		return contactDataTextPersistence.update(contactDataText);
	}

	/**
	 * Creates a new contact data text with the primary key. Does not add the contact data text to the database.
	 *
	 * @param contactDataId the primary key for the new contact data text
	 * @return the new contact data text
	 */
	@Override
	public ContactDataText createContactDataText(long contactDataId) {
		return contactDataTextPersistence.create(contactDataId);
	}

	/**
	 * Deletes the contact data text with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param contactDataId the primary key of the contact data text
	 * @return the contact data text that was removed
	 * @throws PortalException if a contact data text with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ContactDataText deleteContactDataText(long contactDataId)
		throws PortalException, SystemException {
		return contactDataTextPersistence.remove(contactDataId);
	}

	/**
	 * Deletes the contact data text from the database. Also notifies the appropriate model listeners.
	 *
	 * @param contactDataText the contact data text
	 * @return the contact data text that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ContactDataText deleteContactDataText(
		ContactDataText contactDataText) throws SystemException {
		return contactDataTextPersistence.remove(contactDataText);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(ContactDataText.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return contactDataTextPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.leancrm.portlet.library.model.impl.ContactDataTextModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return contactDataTextPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.leancrm.portlet.library.model.impl.ContactDataTextModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return contactDataTextPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return contactDataTextPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return contactDataTextPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public ContactDataText fetchContactDataText(long contactDataId)
		throws SystemException {
		return contactDataTextPersistence.fetchByPrimaryKey(contactDataId);
	}

	/**
	 * Returns the contact data text with the primary key.
	 *
	 * @param contactDataId the primary key of the contact data text
	 * @return the contact data text
	 * @throws PortalException if a contact data text with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public ContactDataText getContactDataText(long contactDataId)
		throws PortalException, SystemException {
		return contactDataTextPersistence.findByPrimaryKey(contactDataId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return contactDataTextPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the contact data texts.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.leancrm.portlet.library.model.impl.ContactDataTextModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of contact data texts
	 * @param end the upper bound of the range of contact data texts (not inclusive)
	 * @return the range of contact data texts
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<ContactDataText> getContactDataTexts(int start, int end)
		throws SystemException {
		return contactDataTextPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of contact data texts.
	 *
	 * @return the number of contact data texts
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getContactDataTextsCount() throws SystemException {
		return contactDataTextPersistence.countAll();
	}

	/**
	 * Updates the contact data text in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param contactDataText the contact data text
	 * @return the contact data text that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ContactDataText updateContactDataText(
		ContactDataText contactDataText) throws SystemException {
		return contactDataTextPersistence.update(contactDataText);
	}

	/**
	 * Returns the address book local service.
	 *
	 * @return the address book local service
	 */
	public com.leancrm.portlet.library.service.AddressBookLocalService getAddressBookLocalService() {
		return addressBookLocalService;
	}

	/**
	 * Sets the address book local service.
	 *
	 * @param addressBookLocalService the address book local service
	 */
	public void setAddressBookLocalService(
		com.leancrm.portlet.library.service.AddressBookLocalService addressBookLocalService) {
		this.addressBookLocalService = addressBookLocalService;
	}

	/**
	 * Returns the address book persistence.
	 *
	 * @return the address book persistence
	 */
	public AddressBookPersistence getAddressBookPersistence() {
		return addressBookPersistence;
	}

	/**
	 * Sets the address book persistence.
	 *
	 * @param addressBookPersistence the address book persistence
	 */
	public void setAddressBookPersistence(
		AddressBookPersistence addressBookPersistence) {
		this.addressBookPersistence = addressBookPersistence;
	}

	/**
	 * Returns the address book contact local service.
	 *
	 * @return the address book contact local service
	 */
	public com.leancrm.portlet.library.service.AddressBookContactLocalService getAddressBookContactLocalService() {
		return addressBookContactLocalService;
	}

	/**
	 * Sets the address book contact local service.
	 *
	 * @param addressBookContactLocalService the address book contact local service
	 */
	public void setAddressBookContactLocalService(
		com.leancrm.portlet.library.service.AddressBookContactLocalService addressBookContactLocalService) {
		this.addressBookContactLocalService = addressBookContactLocalService;
	}

	/**
	 * Returns the address book contact persistence.
	 *
	 * @return the address book contact persistence
	 */
	public AddressBookContactPersistence getAddressBookContactPersistence() {
		return addressBookContactPersistence;
	}

	/**
	 * Sets the address book contact persistence.
	 *
	 * @param addressBookContactPersistence the address book contact persistence
	 */
	public void setAddressBookContactPersistence(
		AddressBookContactPersistence addressBookContactPersistence) {
		this.addressBookContactPersistence = addressBookContactPersistence;
	}

	/**
	 * Returns the address book contact data local service.
	 *
	 * @return the address book contact data local service
	 */
	public com.leancrm.portlet.library.service.AddressBookContactDataLocalService getAddressBookContactDataLocalService() {
		return addressBookContactDataLocalService;
	}

	/**
	 * Sets the address book contact data local service.
	 *
	 * @param addressBookContactDataLocalService the address book contact data local service
	 */
	public void setAddressBookContactDataLocalService(
		com.leancrm.portlet.library.service.AddressBookContactDataLocalService addressBookContactDataLocalService) {
		this.addressBookContactDataLocalService = addressBookContactDataLocalService;
	}

	/**
	 * Returns the address book contact data persistence.
	 *
	 * @return the address book contact data persistence
	 */
	public AddressBookContactDataPersistence getAddressBookContactDataPersistence() {
		return addressBookContactDataPersistence;
	}

	/**
	 * Sets the address book contact data persistence.
	 *
	 * @param addressBookContactDataPersistence the address book contact data persistence
	 */
	public void setAddressBookContactDataPersistence(
		AddressBookContactDataPersistence addressBookContactDataPersistence) {
		this.addressBookContactDataPersistence = addressBookContactDataPersistence;
	}

	/**
	 * Returns the address book organization local service.
	 *
	 * @return the address book organization local service
	 */
	public com.leancrm.portlet.library.service.AddressBookOrganizationLocalService getAddressBookOrganizationLocalService() {
		return addressBookOrganizationLocalService;
	}

	/**
	 * Sets the address book organization local service.
	 *
	 * @param addressBookOrganizationLocalService the address book organization local service
	 */
	public void setAddressBookOrganizationLocalService(
		com.leancrm.portlet.library.service.AddressBookOrganizationLocalService addressBookOrganizationLocalService) {
		this.addressBookOrganizationLocalService = addressBookOrganizationLocalService;
	}

	/**
	 * Returns the address book organization persistence.
	 *
	 * @return the address book organization persistence
	 */
	public AddressBookOrganizationPersistence getAddressBookOrganizationPersistence() {
		return addressBookOrganizationPersistence;
	}

	/**
	 * Sets the address book organization persistence.
	 *
	 * @param addressBookOrganizationPersistence the address book organization persistence
	 */
	public void setAddressBookOrganizationPersistence(
		AddressBookOrganizationPersistence addressBookOrganizationPersistence) {
		this.addressBookOrganizationPersistence = addressBookOrganizationPersistence;
	}

	/**
	 * Returns the address book user local service.
	 *
	 * @return the address book user local service
	 */
	public com.leancrm.portlet.library.service.AddressBookUserLocalService getAddressBookUserLocalService() {
		return addressBookUserLocalService;
	}

	/**
	 * Sets the address book user local service.
	 *
	 * @param addressBookUserLocalService the address book user local service
	 */
	public void setAddressBookUserLocalService(
		com.leancrm.portlet.library.service.AddressBookUserLocalService addressBookUserLocalService) {
		this.addressBookUserLocalService = addressBookUserLocalService;
	}

	/**
	 * Returns the address book user persistence.
	 *
	 * @return the address book user persistence
	 */
	public AddressBookUserPersistence getAddressBookUserPersistence() {
		return addressBookUserPersistence;
	}

	/**
	 * Sets the address book user persistence.
	 *
	 * @param addressBookUserPersistence the address book user persistence
	 */
	public void setAddressBookUserPersistence(
		AddressBookUserPersistence addressBookUserPersistence) {
		this.addressBookUserPersistence = addressBookUserPersistence;
	}

	/**
	 * Returns the colleague address book contact local service.
	 *
	 * @return the colleague address book contact local service
	 */
	public com.leancrm.portlet.library.service.ColleagueAddressBookContactLocalService getColleagueAddressBookContactLocalService() {
		return colleagueAddressBookContactLocalService;
	}

	/**
	 * Sets the colleague address book contact local service.
	 *
	 * @param colleagueAddressBookContactLocalService the colleague address book contact local service
	 */
	public void setColleagueAddressBookContactLocalService(
		com.leancrm.portlet.library.service.ColleagueAddressBookContactLocalService colleagueAddressBookContactLocalService) {
		this.colleagueAddressBookContactLocalService = colleagueAddressBookContactLocalService;
	}

	/**
	 * Returns the colleague address book contact persistence.
	 *
	 * @return the colleague address book contact persistence
	 */
	public ColleagueAddressBookContactPersistence getColleagueAddressBookContactPersistence() {
		return colleagueAddressBookContactPersistence;
	}

	/**
	 * Sets the colleague address book contact persistence.
	 *
	 * @param colleagueAddressBookContactPersistence the colleague address book contact persistence
	 */
	public void setColleagueAddressBookContactPersistence(
		ColleagueAddressBookContactPersistence colleagueAddressBookContactPersistence) {
		this.colleagueAddressBookContactPersistence = colleagueAddressBookContactPersistence;
	}

	/**
	 * Returns the colleague address book contact finder.
	 *
	 * @return the colleague address book contact finder
	 */
	public ColleagueAddressBookContactFinder getColleagueAddressBookContactFinder() {
		return colleagueAddressBookContactFinder;
	}

	/**
	 * Sets the colleague address book contact finder.
	 *
	 * @param colleagueAddressBookContactFinder the colleague address book contact finder
	 */
	public void setColleagueAddressBookContactFinder(
		ColleagueAddressBookContactFinder colleagueAddressBookContactFinder) {
		this.colleagueAddressBookContactFinder = colleagueAddressBookContactFinder;
	}

	/**
	 * Returns the contact local service.
	 *
	 * @return the contact local service
	 */
	public com.leancrm.portlet.library.service.ContactLocalService getContactLocalService() {
		return contactLocalService;
	}

	/**
	 * Sets the contact local service.
	 *
	 * @param contactLocalService the contact local service
	 */
	public void setContactLocalService(
		com.leancrm.portlet.library.service.ContactLocalService contactLocalService) {
		this.contactLocalService = contactLocalService;
	}

	/**
	 * Returns the contact persistence.
	 *
	 * @return the contact persistence
	 */
	public ContactPersistence getContactPersistence() {
		return contactPersistence;
	}

	/**
	 * Sets the contact persistence.
	 *
	 * @param contactPersistence the contact persistence
	 */
	public void setContactPersistence(ContactPersistence contactPersistence) {
		this.contactPersistence = contactPersistence;
	}

	/**
	 * Returns the contact contract local service.
	 *
	 * @return the contact contract local service
	 */
	public com.leancrm.portlet.library.service.ContactContractLocalService getContactContractLocalService() {
		return contactContractLocalService;
	}

	/**
	 * Sets the contact contract local service.
	 *
	 * @param contactContractLocalService the contact contract local service
	 */
	public void setContactContractLocalService(
		com.leancrm.portlet.library.service.ContactContractLocalService contactContractLocalService) {
		this.contactContractLocalService = contactContractLocalService;
	}

	/**
	 * Returns the contact contract persistence.
	 *
	 * @return the contact contract persistence
	 */
	public ContactContractPersistence getContactContractPersistence() {
		return contactContractPersistence;
	}

	/**
	 * Sets the contact contract persistence.
	 *
	 * @param contactContractPersistence the contact contract persistence
	 */
	public void setContactContractPersistence(
		ContactContractPersistence contactContractPersistence) {
		this.contactContractPersistence = contactContractPersistence;
	}

	/**
	 * Returns the contact data local service.
	 *
	 * @return the contact data local service
	 */
	public com.leancrm.portlet.library.service.ContactDataLocalService getContactDataLocalService() {
		return contactDataLocalService;
	}

	/**
	 * Sets the contact data local service.
	 *
	 * @param contactDataLocalService the contact data local service
	 */
	public void setContactDataLocalService(
		com.leancrm.portlet.library.service.ContactDataLocalService contactDataLocalService) {
		this.contactDataLocalService = contactDataLocalService;
	}

	/**
	 * Returns the contact data persistence.
	 *
	 * @return the contact data persistence
	 */
	public ContactDataPersistence getContactDataPersistence() {
		return contactDataPersistence;
	}

	/**
	 * Sets the contact data persistence.
	 *
	 * @param contactDataPersistence the contact data persistence
	 */
	public void setContactDataPersistence(
		ContactDataPersistence contactDataPersistence) {
		this.contactDataPersistence = contactDataPersistence;
	}

	/**
	 * Returns the contact data method local service.
	 *
	 * @return the contact data method local service
	 */
	public com.leancrm.portlet.library.service.ContactDataMethodLocalService getContactDataMethodLocalService() {
		return contactDataMethodLocalService;
	}

	/**
	 * Sets the contact data method local service.
	 *
	 * @param contactDataMethodLocalService the contact data method local service
	 */
	public void setContactDataMethodLocalService(
		com.leancrm.portlet.library.service.ContactDataMethodLocalService contactDataMethodLocalService) {
		this.contactDataMethodLocalService = contactDataMethodLocalService;
	}

	/**
	 * Returns the contact data method persistence.
	 *
	 * @return the contact data method persistence
	 */
	public ContactDataMethodPersistence getContactDataMethodPersistence() {
		return contactDataMethodPersistence;
	}

	/**
	 * Sets the contact data method persistence.
	 *
	 * @param contactDataMethodPersistence the contact data method persistence
	 */
	public void setContactDataMethodPersistence(
		ContactDataMethodPersistence contactDataMethodPersistence) {
		this.contactDataMethodPersistence = contactDataMethodPersistence;
	}

	/**
	 * Returns the contact data phone local service.
	 *
	 * @return the contact data phone local service
	 */
	public com.leancrm.portlet.library.service.ContactDataPhoneLocalService getContactDataPhoneLocalService() {
		return contactDataPhoneLocalService;
	}

	/**
	 * Sets the contact data phone local service.
	 *
	 * @param contactDataPhoneLocalService the contact data phone local service
	 */
	public void setContactDataPhoneLocalService(
		com.leancrm.portlet.library.service.ContactDataPhoneLocalService contactDataPhoneLocalService) {
		this.contactDataPhoneLocalService = contactDataPhoneLocalService;
	}

	/**
	 * Returns the contact data phone persistence.
	 *
	 * @return the contact data phone persistence
	 */
	public ContactDataPhonePersistence getContactDataPhonePersistence() {
		return contactDataPhonePersistence;
	}

	/**
	 * Sets the contact data phone persistence.
	 *
	 * @param contactDataPhonePersistence the contact data phone persistence
	 */
	public void setContactDataPhonePersistence(
		ContactDataPhonePersistence contactDataPhonePersistence) {
		this.contactDataPhonePersistence = contactDataPhonePersistence;
	}

	/**
	 * Returns the contact data ref local service.
	 *
	 * @return the contact data ref local service
	 */
	public com.leancrm.portlet.library.service.ContactDataRefLocalService getContactDataRefLocalService() {
		return contactDataRefLocalService;
	}

	/**
	 * Sets the contact data ref local service.
	 *
	 * @param contactDataRefLocalService the contact data ref local service
	 */
	public void setContactDataRefLocalService(
		com.leancrm.portlet.library.service.ContactDataRefLocalService contactDataRefLocalService) {
		this.contactDataRefLocalService = contactDataRefLocalService;
	}

	/**
	 * Returns the contact data ref persistence.
	 *
	 * @return the contact data ref persistence
	 */
	public ContactDataRefPersistence getContactDataRefPersistence() {
		return contactDataRefPersistence;
	}

	/**
	 * Sets the contact data ref persistence.
	 *
	 * @param contactDataRefPersistence the contact data ref persistence
	 */
	public void setContactDataRefPersistence(
		ContactDataRefPersistence contactDataRefPersistence) {
		this.contactDataRefPersistence = contactDataRefPersistence;
	}

	/**
	 * Returns the contact data text local service.
	 *
	 * @return the contact data text local service
	 */
	public com.leancrm.portlet.library.service.ContactDataTextLocalService getContactDataTextLocalService() {
		return contactDataTextLocalService;
	}

	/**
	 * Sets the contact data text local service.
	 *
	 * @param contactDataTextLocalService the contact data text local service
	 */
	public void setContactDataTextLocalService(
		com.leancrm.portlet.library.service.ContactDataTextLocalService contactDataTextLocalService) {
		this.contactDataTextLocalService = contactDataTextLocalService;
	}

	/**
	 * Returns the contact data text persistence.
	 *
	 * @return the contact data text persistence
	 */
	public ContactDataTextPersistence getContactDataTextPersistence() {
		return contactDataTextPersistence;
	}

	/**
	 * Sets the contact data text persistence.
	 *
	 * @param contactDataTextPersistence the contact data text persistence
	 */
	public void setContactDataTextPersistence(
		ContactDataTextPersistence contactDataTextPersistence) {
		this.contactDataTextPersistence = contactDataTextPersistence;
	}

	/**
	 * Returns the contract local service.
	 *
	 * @return the contract local service
	 */
	public com.leancrm.portlet.library.service.ContractLocalService getContractLocalService() {
		return contractLocalService;
	}

	/**
	 * Sets the contract local service.
	 *
	 * @param contractLocalService the contract local service
	 */
	public void setContractLocalService(
		com.leancrm.portlet.library.service.ContractLocalService contractLocalService) {
		this.contractLocalService = contractLocalService;
	}

	/**
	 * Returns the contract persistence.
	 *
	 * @return the contract persistence
	 */
	public ContractPersistence getContractPersistence() {
		return contractPersistence;
	}

	/**
	 * Sets the contract persistence.
	 *
	 * @param contractPersistence the contract persistence
	 */
	public void setContractPersistence(ContractPersistence contractPersistence) {
		this.contractPersistence = contractPersistence;
	}

	/**
	 * Returns the enterprise local service.
	 *
	 * @return the enterprise local service
	 */
	public com.leancrm.portlet.library.service.EnterpriseLocalService getEnterpriseLocalService() {
		return enterpriseLocalService;
	}

	/**
	 * Sets the enterprise local service.
	 *
	 * @param enterpriseLocalService the enterprise local service
	 */
	public void setEnterpriseLocalService(
		com.leancrm.portlet.library.service.EnterpriseLocalService enterpriseLocalService) {
		this.enterpriseLocalService = enterpriseLocalService;
	}

	/**
	 * Returns the enterprise persistence.
	 *
	 * @return the enterprise persistence
	 */
	public EnterprisePersistence getEnterprisePersistence() {
		return enterprisePersistence;
	}

	/**
	 * Sets the enterprise persistence.
	 *
	 * @param enterprisePersistence the enterprise persistence
	 */
	public void setEnterprisePersistence(
		EnterprisePersistence enterprisePersistence) {
		this.enterprisePersistence = enterprisePersistence;
	}

	/**
	 * Returns the industry local service.
	 *
	 * @return the industry local service
	 */
	public com.leancrm.portlet.library.service.IndustryLocalService getIndustryLocalService() {
		return industryLocalService;
	}

	/**
	 * Sets the industry local service.
	 *
	 * @param industryLocalService the industry local service
	 */
	public void setIndustryLocalService(
		com.leancrm.portlet.library.service.IndustryLocalService industryLocalService) {
		this.industryLocalService = industryLocalService;
	}

	/**
	 * Returns the industry persistence.
	 *
	 * @return the industry persistence
	 */
	public IndustryPersistence getIndustryPersistence() {
		return industryPersistence;
	}

	/**
	 * Sets the industry persistence.
	 *
	 * @param industryPersistence the industry persistence
	 */
	public void setIndustryPersistence(IndustryPersistence industryPersistence) {
		this.industryPersistence = industryPersistence;
	}

	/**
	 * Returns the my address book contact local service.
	 *
	 * @return the my address book contact local service
	 */
	public com.leancrm.portlet.library.service.MyAddressBookContactLocalService getMyAddressBookContactLocalService() {
		return myAddressBookContactLocalService;
	}

	/**
	 * Sets the my address book contact local service.
	 *
	 * @param myAddressBookContactLocalService the my address book contact local service
	 */
	public void setMyAddressBookContactLocalService(
		com.leancrm.portlet.library.service.MyAddressBookContactLocalService myAddressBookContactLocalService) {
		this.myAddressBookContactLocalService = myAddressBookContactLocalService;
	}

	/**
	 * Returns the my address book contact persistence.
	 *
	 * @return the my address book contact persistence
	 */
	public MyAddressBookContactPersistence getMyAddressBookContactPersistence() {
		return myAddressBookContactPersistence;
	}

	/**
	 * Sets the my address book contact persistence.
	 *
	 * @param myAddressBookContactPersistence the my address book contact persistence
	 */
	public void setMyAddressBookContactPersistence(
		MyAddressBookContactPersistence myAddressBookContactPersistence) {
		this.myAddressBookContactPersistence = myAddressBookContactPersistence;
	}

	/**
	 * Returns the my address book contact finder.
	 *
	 * @return the my address book contact finder
	 */
	public MyAddressBookContactFinder getMyAddressBookContactFinder() {
		return myAddressBookContactFinder;
	}

	/**
	 * Sets the my address book contact finder.
	 *
	 * @param myAddressBookContactFinder the my address book contact finder
	 */
	public void setMyAddressBookContactFinder(
		MyAddressBookContactFinder myAddressBookContactFinder) {
		this.myAddressBookContactFinder = myAddressBookContactFinder;
	}

	/**
	 * Returns the next follow up event local service.
	 *
	 * @return the next follow up event local service
	 */
	public com.leancrm.portlet.library.service.NextFollowUpEventLocalService getNextFollowUpEventLocalService() {
		return nextFollowUpEventLocalService;
	}

	/**
	 * Sets the next follow up event local service.
	 *
	 * @param nextFollowUpEventLocalService the next follow up event local service
	 */
	public void setNextFollowUpEventLocalService(
		com.leancrm.portlet.library.service.NextFollowUpEventLocalService nextFollowUpEventLocalService) {
		this.nextFollowUpEventLocalService = nextFollowUpEventLocalService;
	}

	/**
	 * Returns the next follow up event persistence.
	 *
	 * @return the next follow up event persistence
	 */
	public NextFollowUpEventPersistence getNextFollowUpEventPersistence() {
		return nextFollowUpEventPersistence;
	}

	/**
	 * Sets the next follow up event persistence.
	 *
	 * @param nextFollowUpEventPersistence the next follow up event persistence
	 */
	public void setNextFollowUpEventPersistence(
		NextFollowUpEventPersistence nextFollowUpEventPersistence) {
		this.nextFollowUpEventPersistence = nextFollowUpEventPersistence;
	}

	/**
	 * Returns the organization industry local service.
	 *
	 * @return the organization industry local service
	 */
	public com.leancrm.portlet.library.service.OrganizationIndustryLocalService getOrganizationIndustryLocalService() {
		return organizationIndustryLocalService;
	}

	/**
	 * Sets the organization industry local service.
	 *
	 * @param organizationIndustryLocalService the organization industry local service
	 */
	public void setOrganizationIndustryLocalService(
		com.leancrm.portlet.library.service.OrganizationIndustryLocalService organizationIndustryLocalService) {
		this.organizationIndustryLocalService = organizationIndustryLocalService;
	}

	/**
	 * Returns the organization industry persistence.
	 *
	 * @return the organization industry persistence
	 */
	public OrganizationIndustryPersistence getOrganizationIndustryPersistence() {
		return organizationIndustryPersistence;
	}

	/**
	 * Sets the organization industry persistence.
	 *
	 * @param organizationIndustryPersistence the organization industry persistence
	 */
	public void setOrganizationIndustryPersistence(
		OrganizationIndustryPersistence organizationIndustryPersistence) {
		this.organizationIndustryPersistence = organizationIndustryPersistence;
	}

	/**
	 * Returns the report local service.
	 *
	 * @return the report local service
	 */
	public com.leancrm.portlet.library.service.ReportLocalService getReportLocalService() {
		return reportLocalService;
	}

	/**
	 * Sets the report local service.
	 *
	 * @param reportLocalService the report local service
	 */
	public void setReportLocalService(
		com.leancrm.portlet.library.service.ReportLocalService reportLocalService) {
		this.reportLocalService = reportLocalService;
	}

	/**
	 * Returns the report persistence.
	 *
	 * @return the report persistence
	 */
	public ReportPersistence getReportPersistence() {
		return reportPersistence;
	}

	/**
	 * Sets the report persistence.
	 *
	 * @param reportPersistence the report persistence
	 */
	public void setReportPersistence(ReportPersistence reportPersistence) {
		this.reportPersistence = reportPersistence;
	}

	/**
	 * Returns the user contract local service.
	 *
	 * @return the user contract local service
	 */
	public com.leancrm.portlet.library.service.UserContractLocalService getUserContractLocalService() {
		return userContractLocalService;
	}

	/**
	 * Sets the user contract local service.
	 *
	 * @param userContractLocalService the user contract local service
	 */
	public void setUserContractLocalService(
		com.leancrm.portlet.library.service.UserContractLocalService userContractLocalService) {
		this.userContractLocalService = userContractLocalService;
	}

	/**
	 * Returns the user contract persistence.
	 *
	 * @return the user contract persistence
	 */
	public UserContractPersistence getUserContractPersistence() {
		return userContractPersistence;
	}

	/**
	 * Sets the user contract persistence.
	 *
	 * @param userContractPersistence the user contract persistence
	 */
	public void setUserContractPersistence(
		UserContractPersistence userContractPersistence) {
		this.userContractPersistence = userContractPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.leancrm.portlet.library.model.ContactDataText",
			contactDataTextLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.leancrm.portlet.library.model.ContactDataText");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return ContactDataText.class;
	}

	protected String getModelClassName() {
		return ContactDataText.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = contactDataTextPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.leancrm.portlet.library.service.AddressBookLocalService.class)
	protected com.leancrm.portlet.library.service.AddressBookLocalService addressBookLocalService;
	@BeanReference(type = AddressBookPersistence.class)
	protected AddressBookPersistence addressBookPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.AddressBookContactLocalService.class)
	protected com.leancrm.portlet.library.service.AddressBookContactLocalService addressBookContactLocalService;
	@BeanReference(type = AddressBookContactPersistence.class)
	protected AddressBookContactPersistence addressBookContactPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.AddressBookContactDataLocalService.class)
	protected com.leancrm.portlet.library.service.AddressBookContactDataLocalService addressBookContactDataLocalService;
	@BeanReference(type = AddressBookContactDataPersistence.class)
	protected AddressBookContactDataPersistence addressBookContactDataPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.AddressBookOrganizationLocalService.class)
	protected com.leancrm.portlet.library.service.AddressBookOrganizationLocalService addressBookOrganizationLocalService;
	@BeanReference(type = AddressBookOrganizationPersistence.class)
	protected AddressBookOrganizationPersistence addressBookOrganizationPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.AddressBookUserLocalService.class)
	protected com.leancrm.portlet.library.service.AddressBookUserLocalService addressBookUserLocalService;
	@BeanReference(type = AddressBookUserPersistence.class)
	protected AddressBookUserPersistence addressBookUserPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ColleagueAddressBookContactLocalService.class)
	protected com.leancrm.portlet.library.service.ColleagueAddressBookContactLocalService colleagueAddressBookContactLocalService;
	@BeanReference(type = ColleagueAddressBookContactPersistence.class)
	protected ColleagueAddressBookContactPersistence colleagueAddressBookContactPersistence;
	@BeanReference(type = ColleagueAddressBookContactFinder.class)
	protected ColleagueAddressBookContactFinder colleagueAddressBookContactFinder;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactLocalService.class)
	protected com.leancrm.portlet.library.service.ContactLocalService contactLocalService;
	@BeanReference(type = ContactPersistence.class)
	protected ContactPersistence contactPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactContractLocalService.class)
	protected com.leancrm.portlet.library.service.ContactContractLocalService contactContractLocalService;
	@BeanReference(type = ContactContractPersistence.class)
	protected ContactContractPersistence contactContractPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactDataLocalService.class)
	protected com.leancrm.portlet.library.service.ContactDataLocalService contactDataLocalService;
	@BeanReference(type = ContactDataPersistence.class)
	protected ContactDataPersistence contactDataPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactDataMethodLocalService.class)
	protected com.leancrm.portlet.library.service.ContactDataMethodLocalService contactDataMethodLocalService;
	@BeanReference(type = ContactDataMethodPersistence.class)
	protected ContactDataMethodPersistence contactDataMethodPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactDataPhoneLocalService.class)
	protected com.leancrm.portlet.library.service.ContactDataPhoneLocalService contactDataPhoneLocalService;
	@BeanReference(type = ContactDataPhonePersistence.class)
	protected ContactDataPhonePersistence contactDataPhonePersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactDataRefLocalService.class)
	protected com.leancrm.portlet.library.service.ContactDataRefLocalService contactDataRefLocalService;
	@BeanReference(type = ContactDataRefPersistence.class)
	protected ContactDataRefPersistence contactDataRefPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContactDataTextLocalService.class)
	protected com.leancrm.portlet.library.service.ContactDataTextLocalService contactDataTextLocalService;
	@BeanReference(type = ContactDataTextPersistence.class)
	protected ContactDataTextPersistence contactDataTextPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ContractLocalService.class)
	protected com.leancrm.portlet.library.service.ContractLocalService contractLocalService;
	@BeanReference(type = ContractPersistence.class)
	protected ContractPersistence contractPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.EnterpriseLocalService.class)
	protected com.leancrm.portlet.library.service.EnterpriseLocalService enterpriseLocalService;
	@BeanReference(type = EnterprisePersistence.class)
	protected EnterprisePersistence enterprisePersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.IndustryLocalService.class)
	protected com.leancrm.portlet.library.service.IndustryLocalService industryLocalService;
	@BeanReference(type = IndustryPersistence.class)
	protected IndustryPersistence industryPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.MyAddressBookContactLocalService.class)
	protected com.leancrm.portlet.library.service.MyAddressBookContactLocalService myAddressBookContactLocalService;
	@BeanReference(type = MyAddressBookContactPersistence.class)
	protected MyAddressBookContactPersistence myAddressBookContactPersistence;
	@BeanReference(type = MyAddressBookContactFinder.class)
	protected MyAddressBookContactFinder myAddressBookContactFinder;
	@BeanReference(type = com.leancrm.portlet.library.service.NextFollowUpEventLocalService.class)
	protected com.leancrm.portlet.library.service.NextFollowUpEventLocalService nextFollowUpEventLocalService;
	@BeanReference(type = NextFollowUpEventPersistence.class)
	protected NextFollowUpEventPersistence nextFollowUpEventPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.OrganizationIndustryLocalService.class)
	protected com.leancrm.portlet.library.service.OrganizationIndustryLocalService organizationIndustryLocalService;
	@BeanReference(type = OrganizationIndustryPersistence.class)
	protected OrganizationIndustryPersistence organizationIndustryPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.ReportLocalService.class)
	protected com.leancrm.portlet.library.service.ReportLocalService reportLocalService;
	@BeanReference(type = ReportPersistence.class)
	protected ReportPersistence reportPersistence;
	@BeanReference(type = com.leancrm.portlet.library.service.UserContractLocalService.class)
	protected com.leancrm.portlet.library.service.UserContractLocalService userContractLocalService;
	@BeanReference(type = UserContractPersistence.class)
	protected UserContractPersistence userContractPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private ContactDataTextLocalServiceClpInvoker _clpInvoker = new ContactDataTextLocalServiceClpInvoker();
}