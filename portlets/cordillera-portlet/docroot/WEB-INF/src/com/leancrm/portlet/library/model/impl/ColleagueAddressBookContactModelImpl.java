/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.leancrm.portlet.library.model.impl;

import com.leancrm.portlet.library.model.ColleagueAddressBookContact;
import com.leancrm.portlet.library.model.ColleagueAddressBookContactModel;
import com.leancrm.portlet.library.service.persistence.ColleagueAddressBookContactPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ColleagueAddressBookContact service. Represents a row in the &quot;crm_ColleagueAddressBookContact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.leancrm.portlet.library.model.ColleagueAddressBookContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ColleagueAddressBookContactImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ColleagueAddressBookContactImpl
 * @see com.leancrm.portlet.library.model.ColleagueAddressBookContact
 * @see com.leancrm.portlet.library.model.ColleagueAddressBookContactModel
 * @generated
 */
public class ColleagueAddressBookContactModelImpl extends BaseModelImpl<ColleagueAddressBookContact>
	implements ColleagueAddressBookContactModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a colleague address book contact model instance should use the {@link com.leancrm.portlet.library.model.ColleagueAddressBookContact} interface instead.
	 */
	public static final String TABLE_NAME = "crm_ColleagueAddressBookContact";
	public static final Object[][] TABLE_COLUMNS = {
			{ "contactid", Types.BIGINT },
			{ "emailAddress", Types.VARCHAR },
			{ "contactdataid", Types.BIGINT },
			{ "methodId", Types.BIGINT },
			{ "contactName", Types.VARCHAR },
			{ "enterpriseName", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table crm_ColleagueAddressBookContact (contactid LONG not null,emailAddress VARCHAR(75) null,contactdataid LONG,methodId LONG not null,contactName VARCHAR(75) null,enterpriseName VARCHAR(75) null,primary key (contactid, methodId))";
	public static final String TABLE_SQL_DROP = "drop table crm_ColleagueAddressBookContact";
	public static final String ORDER_BY_JPQL = " ORDER BY colleagueAddressBookContact.id.contactid ASC, colleagueAddressBookContact.id.methodId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY crm_ColleagueAddressBookContact.contactid ASC, crm_ColleagueAddressBookContact.methodId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.leancrm.portlet.library.model.ColleagueAddressBookContact"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.leancrm.portlet.library.model.ColleagueAddressBookContact"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.leancrm.portlet.library.model.ColleagueAddressBookContact"));

	public ColleagueAddressBookContactModelImpl() {
	}

	@Override
	public ColleagueAddressBookContactPK getPrimaryKey() {
		return new ColleagueAddressBookContactPK(_contactid, _methodId);
	}

	@Override
	public void setPrimaryKey(ColleagueAddressBookContactPK primaryKey) {
		setContactid(primaryKey.contactid);
		setMethodId(primaryKey.methodId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ColleagueAddressBookContactPK(_contactid, _methodId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ColleagueAddressBookContactPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ColleagueAddressBookContact.class;
	}

	@Override
	public String getModelClassName() {
		return ColleagueAddressBookContact.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("contactid", getContactid());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("contactdataid", getContactdataid());
		attributes.put("methodId", getMethodId());
		attributes.put("contactName", getContactName());
		attributes.put("enterpriseName", getEnterpriseName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long contactid = (Long)attributes.get("contactid");

		if (contactid != null) {
			setContactid(contactid);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		Long contactdataid = (Long)attributes.get("contactdataid");

		if (contactdataid != null) {
			setContactdataid(contactdataid);
		}

		Long methodId = (Long)attributes.get("methodId");

		if (methodId != null) {
			setMethodId(methodId);
		}

		String contactName = (String)attributes.get("contactName");

		if (contactName != null) {
			setContactName(contactName);
		}

		String enterpriseName = (String)attributes.get("enterpriseName");

		if (enterpriseName != null) {
			setEnterpriseName(enterpriseName);
		}
	}

	@Override
	public long getContactid() {
		return _contactid;
	}

	@Override
	public void setContactid(long contactid) {
		_contactid = contactid;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public long getContactdataid() {
		return _contactdataid;
	}

	@Override
	public void setContactdataid(long contactdataid) {
		_contactdataid = contactdataid;
	}

	@Override
	public long getMethodId() {
		return _methodId;
	}

	@Override
	public void setMethodId(long methodId) {
		_methodId = methodId;
	}

	@Override
	public String getContactName() {
		if (_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		_contactName = contactName;
	}

	@Override
	public String getEnterpriseName() {
		if (_enterpriseName == null) {
			return StringPool.BLANK;
		}
		else {
			return _enterpriseName;
		}
	}

	@Override
	public void setEnterpriseName(String enterpriseName) {
		_enterpriseName = enterpriseName;
	}

	@Override
	public ColleagueAddressBookContact toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ColleagueAddressBookContact)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ColleagueAddressBookContactImpl colleagueAddressBookContactImpl = new ColleagueAddressBookContactImpl();

		colleagueAddressBookContactImpl.setContactid(getContactid());
		colleagueAddressBookContactImpl.setEmailAddress(getEmailAddress());
		colleagueAddressBookContactImpl.setContactdataid(getContactdataid());
		colleagueAddressBookContactImpl.setMethodId(getMethodId());
		colleagueAddressBookContactImpl.setContactName(getContactName());
		colleagueAddressBookContactImpl.setEnterpriseName(getEnterpriseName());

		colleagueAddressBookContactImpl.resetOriginalValues();

		return colleagueAddressBookContactImpl;
	}

	@Override
	public int compareTo(
		ColleagueAddressBookContact colleagueAddressBookContact) {
		ColleagueAddressBookContactPK primaryKey = colleagueAddressBookContact.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ColleagueAddressBookContact)) {
			return false;
		}

		ColleagueAddressBookContact colleagueAddressBookContact = (ColleagueAddressBookContact)obj;

		ColleagueAddressBookContactPK primaryKey = colleagueAddressBookContact.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ColleagueAddressBookContact> toCacheModel() {
		ColleagueAddressBookContactCacheModel colleagueAddressBookContactCacheModel =
			new ColleagueAddressBookContactCacheModel();

		colleagueAddressBookContactCacheModel.contactid = getContactid();

		colleagueAddressBookContactCacheModel.emailAddress = getEmailAddress();

		String emailAddress = colleagueAddressBookContactCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			colleagueAddressBookContactCacheModel.emailAddress = null;
		}

		colleagueAddressBookContactCacheModel.contactdataid = getContactdataid();

		colleagueAddressBookContactCacheModel.methodId = getMethodId();

		colleagueAddressBookContactCacheModel.contactName = getContactName();

		String contactName = colleagueAddressBookContactCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			colleagueAddressBookContactCacheModel.contactName = null;
		}

		colleagueAddressBookContactCacheModel.enterpriseName = getEnterpriseName();

		String enterpriseName = colleagueAddressBookContactCacheModel.enterpriseName;

		if ((enterpriseName != null) && (enterpriseName.length() == 0)) {
			colleagueAddressBookContactCacheModel.enterpriseName = null;
		}

		return colleagueAddressBookContactCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{contactid=");
		sb.append(getContactid());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", contactdataid=");
		sb.append(getContactdataid());
		sb.append(", methodId=");
		sb.append(getMethodId());
		sb.append(", contactName=");
		sb.append(getContactName());
		sb.append(", enterpriseName=");
		sb.append(getEnterpriseName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append(
			"com.leancrm.portlet.library.model.ColleagueAddressBookContact");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>contactid</column-name><column-value><![CDATA[");
		sb.append(getContactid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactdataid</column-name><column-value><![CDATA[");
		sb.append(getContactdataid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>methodId</column-name><column-value><![CDATA[");
		sb.append(getMethodId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactName</column-name><column-value><![CDATA[");
		sb.append(getContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enterpriseName</column-name><column-value><![CDATA[");
		sb.append(getEnterpriseName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ColleagueAddressBookContact.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ColleagueAddressBookContact.class
		};
	private long _contactid;
	private String _emailAddress;
	private long _contactdataid;
	private long _methodId;
	private String _contactName;
	private String _enterpriseName;
	private ColleagueAddressBookContact _escapedModel;
}