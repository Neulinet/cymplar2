/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.leancrm.portlet.library.model.impl;

import com.leancrm.portlet.library.model.OrganizationIndustry;
import com.leancrm.portlet.library.model.OrganizationIndustryModel;
import com.leancrm.portlet.library.service.persistence.OrganizationIndustryPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the OrganizationIndustry service. Represents a row in the &quot;crm_OrganizationIndustry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.leancrm.portlet.library.model.OrganizationIndustryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrganizationIndustryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OrganizationIndustryImpl
 * @see com.leancrm.portlet.library.model.OrganizationIndustry
 * @see com.leancrm.portlet.library.model.OrganizationIndustryModel
 * @generated
 */
public class OrganizationIndustryModelImpl extends BaseModelImpl<OrganizationIndustry>
	implements OrganizationIndustryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a organization industry model instance should use the {@link com.leancrm.portlet.library.model.OrganizationIndustry} interface instead.
	 */
	public static final String TABLE_NAME = "crm_OrganizationIndustry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "organizationId", Types.BIGINT },
			{ "industryId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table crm_OrganizationIndustry (organizationId LONG not null,industryId LONG not null,primary key (organizationId, industryId))";
	public static final String TABLE_SQL_DROP = "drop table crm_OrganizationIndustry";
	public static final String ORDER_BY_JPQL = " ORDER BY organizationIndustry.id.organizationId ASC, organizationIndustry.id.industryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY crm_OrganizationIndustry.organizationId ASC, crm_OrganizationIndustry.industryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.leancrm.portlet.library.model.OrganizationIndustry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.leancrm.portlet.library.model.OrganizationIndustry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.leancrm.portlet.library.model.OrganizationIndustry"));

	public OrganizationIndustryModelImpl() {
	}

	@Override
	public OrganizationIndustryPK getPrimaryKey() {
		return new OrganizationIndustryPK(_organizationId, _industryId);
	}

	@Override
	public void setPrimaryKey(OrganizationIndustryPK primaryKey) {
		setOrganizationId(primaryKey.organizationId);
		setIndustryId(primaryKey.industryId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new OrganizationIndustryPK(_organizationId, _industryId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((OrganizationIndustryPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return OrganizationIndustry.class;
	}

	@Override
	public String getModelClassName() {
		return OrganizationIndustry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("organizationId", getOrganizationId());
		attributes.put("industryId", getIndustryId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long industryId = (Long)attributes.get("industryId");

		if (industryId != null) {
			setIndustryId(industryId);
		}
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@Override
	public long getIndustryId() {
		return _industryId;
	}

	@Override
	public void setIndustryId(long industryId) {
		_industryId = industryId;
	}

	@Override
	public OrganizationIndustry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OrganizationIndustry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrganizationIndustryImpl organizationIndustryImpl = new OrganizationIndustryImpl();

		organizationIndustryImpl.setOrganizationId(getOrganizationId());
		organizationIndustryImpl.setIndustryId(getIndustryId());

		organizationIndustryImpl.resetOriginalValues();

		return organizationIndustryImpl;
	}

	@Override
	public int compareTo(OrganizationIndustry organizationIndustry) {
		OrganizationIndustryPK primaryKey = organizationIndustry.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OrganizationIndustry)) {
			return false;
		}

		OrganizationIndustry organizationIndustry = (OrganizationIndustry)obj;

		OrganizationIndustryPK primaryKey = organizationIndustry.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<OrganizationIndustry> toCacheModel() {
		OrganizationIndustryCacheModel organizationIndustryCacheModel = new OrganizationIndustryCacheModel();

		organizationIndustryCacheModel.organizationId = getOrganizationId();

		organizationIndustryCacheModel.industryId = getIndustryId();

		return organizationIndustryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{organizationId=");
		sb.append(getOrganizationId());
		sb.append(", industryId=");
		sb.append(getIndustryId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.leancrm.portlet.library.model.OrganizationIndustry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>industryId</column-name><column-value><![CDATA[");
		sb.append(getIndustryId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = OrganizationIndustry.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			OrganizationIndustry.class
		};
	private long _organizationId;
	private long _industryId;
	private OrganizationIndustry _escapedModel;
}