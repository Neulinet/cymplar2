/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.leancrm.portlet.library.model.impl;

import com.leancrm.portlet.library.model.AddressBookContact;
import com.leancrm.portlet.library.model.AddressBookContactModel;
import com.leancrm.portlet.library.service.persistence.AddressBookContactPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AddressBookContact service. Represents a row in the &quot;crm_AddressBookContact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.leancrm.portlet.library.model.AddressBookContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AddressBookContactImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AddressBookContactImpl
 * @see com.leancrm.portlet.library.model.AddressBookContact
 * @see com.leancrm.portlet.library.model.AddressBookContactModel
 * @generated
 */
public class AddressBookContactModelImpl extends BaseModelImpl<AddressBookContact>
	implements AddressBookContactModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a address book contact model instance should use the {@link com.leancrm.portlet.library.model.AddressBookContact} interface instead.
	 */
	public static final String TABLE_NAME = "crm_AddressBookContact";
	public static final Object[][] TABLE_COLUMNS = {
			{ "addressBookId", Types.BIGINT },
			{ "contactId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "assignedTo", Types.BIGINT },
			{ "currentProgress", Types.DOUBLE }
		};
	public static final String TABLE_SQL_CREATE = "create table crm_AddressBookContact (addressBookId LONG not null,contactId LONG not null,groupId LONG,companyId LONG,assignedTo LONG,currentProgress DOUBLE,primary key (addressBookId, contactId))";
	public static final String TABLE_SQL_DROP = "drop table crm_AddressBookContact";
	public static final String ORDER_BY_JPQL = " ORDER BY addressBookContact.id.addressBookId ASC, addressBookContact.id.contactId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY crm_AddressBookContact.addressBookId ASC, crm_AddressBookContact.contactId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.leancrm.portlet.library.model.AddressBookContact"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.leancrm.portlet.library.model.AddressBookContact"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.leancrm.portlet.library.model.AddressBookContact"),
			true);
	public static long ADDRESSBOOKID_COLUMN_BITMASK = 1L;
	public static long CONTACTID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.leancrm.portlet.library.model.AddressBookContact"));

	public AddressBookContactModelImpl() {
	}

	@Override
	public AddressBookContactPK getPrimaryKey() {
		return new AddressBookContactPK(_addressBookId, _contactId);
	}

	@Override
	public void setPrimaryKey(AddressBookContactPK primaryKey) {
		setAddressBookId(primaryKey.addressBookId);
		setContactId(primaryKey.contactId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new AddressBookContactPK(_addressBookId, _contactId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((AddressBookContactPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return AddressBookContact.class;
	}

	@Override
	public String getModelClassName() {
		return AddressBookContact.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("addressBookId", getAddressBookId());
		attributes.put("contactId", getContactId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("assignedTo", getAssignedTo());
		attributes.put("currentProgress", getCurrentProgress());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long addressBookId = (Long)attributes.get("addressBookId");

		if (addressBookId != null) {
			setAddressBookId(addressBookId);
		}

		Long contactId = (Long)attributes.get("contactId");

		if (contactId != null) {
			setContactId(contactId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long assignedTo = (Long)attributes.get("assignedTo");

		if (assignedTo != null) {
			setAssignedTo(assignedTo);
		}

		Double currentProgress = (Double)attributes.get("currentProgress");

		if (currentProgress != null) {
			setCurrentProgress(currentProgress);
		}
	}

	@Override
	public long getAddressBookId() {
		return _addressBookId;
	}

	@Override
	public void setAddressBookId(long addressBookId) {
		_columnBitmask |= ADDRESSBOOKID_COLUMN_BITMASK;

		if (!_setOriginalAddressBookId) {
			_setOriginalAddressBookId = true;

			_originalAddressBookId = _addressBookId;
		}

		_addressBookId = addressBookId;
	}

	public long getOriginalAddressBookId() {
		return _originalAddressBookId;
	}

	@Override
	public long getContactId() {
		return _contactId;
	}

	@Override
	public void setContactId(long contactId) {
		_columnBitmask |= CONTACTID_COLUMN_BITMASK;

		if (!_setOriginalContactId) {
			_setOriginalContactId = true;

			_originalContactId = _contactId;
		}

		_contactId = contactId;
	}

	public long getOriginalContactId() {
		return _originalContactId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getAssignedTo() {
		return _assignedTo;
	}

	@Override
	public void setAssignedTo(long assignedTo) {
		_assignedTo = assignedTo;
	}

	@Override
	public double getCurrentProgress() {
		return _currentProgress;
	}

	@Override
	public void setCurrentProgress(double currentProgress) {
		_currentProgress = currentProgress;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public AddressBookContact toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AddressBookContact)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AddressBookContactImpl addressBookContactImpl = new AddressBookContactImpl();

		addressBookContactImpl.setAddressBookId(getAddressBookId());
		addressBookContactImpl.setContactId(getContactId());
		addressBookContactImpl.setGroupId(getGroupId());
		addressBookContactImpl.setCompanyId(getCompanyId());
		addressBookContactImpl.setAssignedTo(getAssignedTo());
		addressBookContactImpl.setCurrentProgress(getCurrentProgress());

		addressBookContactImpl.resetOriginalValues();

		return addressBookContactImpl;
	}

	@Override
	public int compareTo(AddressBookContact addressBookContact) {
		AddressBookContactPK primaryKey = addressBookContact.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AddressBookContact)) {
			return false;
		}

		AddressBookContact addressBookContact = (AddressBookContact)obj;

		AddressBookContactPK primaryKey = addressBookContact.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		AddressBookContactModelImpl addressBookContactModelImpl = this;

		addressBookContactModelImpl._originalAddressBookId = addressBookContactModelImpl._addressBookId;

		addressBookContactModelImpl._setOriginalAddressBookId = false;

		addressBookContactModelImpl._originalContactId = addressBookContactModelImpl._contactId;

		addressBookContactModelImpl._setOriginalContactId = false;

		addressBookContactModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AddressBookContact> toCacheModel() {
		AddressBookContactCacheModel addressBookContactCacheModel = new AddressBookContactCacheModel();

		addressBookContactCacheModel.addressBookId = getAddressBookId();

		addressBookContactCacheModel.contactId = getContactId();

		addressBookContactCacheModel.groupId = getGroupId();

		addressBookContactCacheModel.companyId = getCompanyId();

		addressBookContactCacheModel.assignedTo = getAssignedTo();

		addressBookContactCacheModel.currentProgress = getCurrentProgress();

		return addressBookContactCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{addressBookId=");
		sb.append(getAddressBookId());
		sb.append(", contactId=");
		sb.append(getContactId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", assignedTo=");
		sb.append(getAssignedTo());
		sb.append(", currentProgress=");
		sb.append(getCurrentProgress());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.leancrm.portlet.library.model.AddressBookContact");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>addressBookId</column-name><column-value><![CDATA[");
		sb.append(getAddressBookId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactId</column-name><column-value><![CDATA[");
		sb.append(getContactId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assignedTo</column-name><column-value><![CDATA[");
		sb.append(getAssignedTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentProgress</column-name><column-value><![CDATA[");
		sb.append(getCurrentProgress());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AddressBookContact.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AddressBookContact.class
		};
	private long _addressBookId;
	private long _originalAddressBookId;
	private boolean _setOriginalAddressBookId;
	private long _contactId;
	private long _originalContactId;
	private boolean _setOriginalContactId;
	private long _groupId;
	private long _companyId;
	private long _assignedTo;
	private double _currentProgress;
	private long _columnBitmask;
	private AddressBookContact _escapedModel;
}