/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.leancrm.portlet.library.model.impl;

import com.leancrm.portlet.library.model.MyAddressBookContact;
import com.leancrm.portlet.library.model.MyAddressBookContactModel;
import com.leancrm.portlet.library.service.persistence.MyAddressBookContactPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MyAddressBookContact service. Represents a row in the &quot;crm_MyAddressBookContact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.leancrm.portlet.library.model.MyAddressBookContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MyAddressBookContactImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MyAddressBookContactImpl
 * @see com.leancrm.portlet.library.model.MyAddressBookContact
 * @see com.leancrm.portlet.library.model.MyAddressBookContactModel
 * @generated
 */
public class MyAddressBookContactModelImpl extends BaseModelImpl<MyAddressBookContact>
	implements MyAddressBookContactModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a my address book contact model instance should use the {@link com.leancrm.portlet.library.model.MyAddressBookContact} interface instead.
	 */
	public static final String TABLE_NAME = "crm_MyAddressBookContact";
	public static final Object[][] TABLE_COLUMNS = {
			{ "contactId", Types.BIGINT },
			{ "methodId", Types.BIGINT },
			{ "contactName", Types.VARCHAR },
			{ "enterpriseId", Types.BIGINT },
			{ "enterpriseName", Types.VARCHAR },
			{ "contractId", Types.BIGINT },
			{ "reportId", Types.BIGINT },
			{ "status", Types.INTEGER },
			{ "progress", Types.DOUBLE },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table crm_MyAddressBookContact (contactId LONG not null,methodId LONG not null,contactName VARCHAR(75) null,enterpriseId LONG,enterpriseName VARCHAR(75) null,contractId LONG,reportId LONG,status INTEGER,progress DOUBLE,description VARCHAR(75) null,primary key (contactId, methodId))";
	public static final String TABLE_SQL_DROP = "drop table crm_MyAddressBookContact";
	public static final String ORDER_BY_JPQL = " ORDER BY myAddressBookContact.id.contactId ASC, myAddressBookContact.id.methodId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY crm_MyAddressBookContact.contactId ASC, crm_MyAddressBookContact.methodId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.leancrm.portlet.library.model.MyAddressBookContact"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.leancrm.portlet.library.model.MyAddressBookContact"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.leancrm.portlet.library.model.MyAddressBookContact"));

	public MyAddressBookContactModelImpl() {
	}

	@Override
	public MyAddressBookContactPK getPrimaryKey() {
		return new MyAddressBookContactPK(_contactId, _methodId);
	}

	@Override
	public void setPrimaryKey(MyAddressBookContactPK primaryKey) {
		setContactId(primaryKey.contactId);
		setMethodId(primaryKey.methodId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new MyAddressBookContactPK(_contactId, _methodId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((MyAddressBookContactPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return MyAddressBookContact.class;
	}

	@Override
	public String getModelClassName() {
		return MyAddressBookContact.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("contactId", getContactId());
		attributes.put("methodId", getMethodId());
		attributes.put("contactName", getContactName());
		attributes.put("enterpriseId", getEnterpriseId());
		attributes.put("enterpriseName", getEnterpriseName());
		attributes.put("contractId", getContractId());
		attributes.put("reportId", getReportId());
		attributes.put("status", getStatus());
		attributes.put("progress", getProgress());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long contactId = (Long)attributes.get("contactId");

		if (contactId != null) {
			setContactId(contactId);
		}

		Long methodId = (Long)attributes.get("methodId");

		if (methodId != null) {
			setMethodId(methodId);
		}

		String contactName = (String)attributes.get("contactName");

		if (contactName != null) {
			setContactName(contactName);
		}

		Long enterpriseId = (Long)attributes.get("enterpriseId");

		if (enterpriseId != null) {
			setEnterpriseId(enterpriseId);
		}

		String enterpriseName = (String)attributes.get("enterpriseName");

		if (enterpriseName != null) {
			setEnterpriseName(enterpriseName);
		}

		Long contractId = (Long)attributes.get("contractId");

		if (contractId != null) {
			setContractId(contractId);
		}

		Long reportId = (Long)attributes.get("reportId");

		if (reportId != null) {
			setReportId(reportId);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Double progress = (Double)attributes.get("progress");

		if (progress != null) {
			setProgress(progress);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@Override
	public long getContactId() {
		return _contactId;
	}

	@Override
	public void setContactId(long contactId) {
		_contactId = contactId;
	}

	@Override
	public long getMethodId() {
		return _methodId;
	}

	@Override
	public void setMethodId(long methodId) {
		_methodId = methodId;
	}

	@Override
	public String getContactName() {
		if (_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		_contactName = contactName;
	}

	@Override
	public long getEnterpriseId() {
		return _enterpriseId;
	}

	@Override
	public void setEnterpriseId(long enterpriseId) {
		_enterpriseId = enterpriseId;
	}

	@Override
	public String getEnterpriseName() {
		if (_enterpriseName == null) {
			return StringPool.BLANK;
		}
		else {
			return _enterpriseName;
		}
	}

	@Override
	public void setEnterpriseName(String enterpriseName) {
		_enterpriseName = enterpriseName;
	}

	@Override
	public long getContractId() {
		return _contractId;
	}

	@Override
	public void setContractId(long contractId) {
		_contractId = contractId;
	}

	@Override
	public long getReportId() {
		return _reportId;
	}

	@Override
	public void setReportId(long reportId) {
		_reportId = reportId;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public double getProgress() {
		return _progress;
	}

	@Override
	public void setProgress(double progress) {
		_progress = progress;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public MyAddressBookContact toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MyAddressBookContact)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MyAddressBookContactImpl myAddressBookContactImpl = new MyAddressBookContactImpl();

		myAddressBookContactImpl.setContactId(getContactId());
		myAddressBookContactImpl.setMethodId(getMethodId());
		myAddressBookContactImpl.setContactName(getContactName());
		myAddressBookContactImpl.setEnterpriseId(getEnterpriseId());
		myAddressBookContactImpl.setEnterpriseName(getEnterpriseName());
		myAddressBookContactImpl.setContractId(getContractId());
		myAddressBookContactImpl.setReportId(getReportId());
		myAddressBookContactImpl.setStatus(getStatus());
		myAddressBookContactImpl.setProgress(getProgress());
		myAddressBookContactImpl.setDescription(getDescription());

		myAddressBookContactImpl.resetOriginalValues();

		return myAddressBookContactImpl;
	}

	@Override
	public int compareTo(MyAddressBookContact myAddressBookContact) {
		MyAddressBookContactPK primaryKey = myAddressBookContact.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MyAddressBookContact)) {
			return false;
		}

		MyAddressBookContact myAddressBookContact = (MyAddressBookContact)obj;

		MyAddressBookContactPK primaryKey = myAddressBookContact.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<MyAddressBookContact> toCacheModel() {
		MyAddressBookContactCacheModel myAddressBookContactCacheModel = new MyAddressBookContactCacheModel();

		myAddressBookContactCacheModel.contactId = getContactId();

		myAddressBookContactCacheModel.methodId = getMethodId();

		myAddressBookContactCacheModel.contactName = getContactName();

		String contactName = myAddressBookContactCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			myAddressBookContactCacheModel.contactName = null;
		}

		myAddressBookContactCacheModel.enterpriseId = getEnterpriseId();

		myAddressBookContactCacheModel.enterpriseName = getEnterpriseName();

		String enterpriseName = myAddressBookContactCacheModel.enterpriseName;

		if ((enterpriseName != null) && (enterpriseName.length() == 0)) {
			myAddressBookContactCacheModel.enterpriseName = null;
		}

		myAddressBookContactCacheModel.contractId = getContractId();

		myAddressBookContactCacheModel.reportId = getReportId();

		myAddressBookContactCacheModel.status = getStatus();

		myAddressBookContactCacheModel.progress = getProgress();

		myAddressBookContactCacheModel.description = getDescription();

		String description = myAddressBookContactCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			myAddressBookContactCacheModel.description = null;
		}

		return myAddressBookContactCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{contactId=");
		sb.append(getContactId());
		sb.append(", methodId=");
		sb.append(getMethodId());
		sb.append(", contactName=");
		sb.append(getContactName());
		sb.append(", enterpriseId=");
		sb.append(getEnterpriseId());
		sb.append(", enterpriseName=");
		sb.append(getEnterpriseName());
		sb.append(", contractId=");
		sb.append(getContractId());
		sb.append(", reportId=");
		sb.append(getReportId());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", progress=");
		sb.append(getProgress());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.leancrm.portlet.library.model.MyAddressBookContact");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>contactId</column-name><column-value><![CDATA[");
		sb.append(getContactId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>methodId</column-name><column-value><![CDATA[");
		sb.append(getMethodId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactName</column-name><column-value><![CDATA[");
		sb.append(getContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enterpriseId</column-name><column-value><![CDATA[");
		sb.append(getEnterpriseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enterpriseName</column-name><column-value><![CDATA[");
		sb.append(getEnterpriseName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractId</column-name><column-value><![CDATA[");
		sb.append(getContractId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reportId</column-name><column-value><![CDATA[");
		sb.append(getReportId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>progress</column-name><column-value><![CDATA[");
		sb.append(getProgress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MyAddressBookContact.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MyAddressBookContact.class
		};
	private long _contactId;
	private long _methodId;
	private String _contactName;
	private long _enterpriseId;
	private String _enterpriseName;
	private long _contractId;
	private long _reportId;
	private int _status;
	private double _progress;
	private String _description;
	private MyAddressBookContact _escapedModel;
}